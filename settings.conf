FRONT_END="icarus"
WEB_ROOT=""

SQLITE_INSTANCES = {
  "icarus_tpc_hw": {
    "file": "/home/nfs/gputnam/webdata/ChannelMapICARUS.db"
  },

  "icarus_pmt_hw": {
    "file": "/home/nfs/gputnam/webdata/ChannelMapICARUSPMT.db"
  },

  "icarus_crt_hw": {
    "file": "/home/nfs/gputnam/webdata/ChannelMapICARUSCRT.db"
  }
}

REDIS_INSTANCES = {
  "online": {
    "host": "icarus-db01",
    "port": 6379,
    #"host": "sbnd-daq33.fnal.gov",
    #"password": "B4730D6D9606E3EB37048EB017D4C69EFB56243CCC408E3BEC3BFDEEDF792876"
  }
}

# POSTGRES_INSTANCES = {}

def sbn_epics_table():
    table_name = "DCS_ARCHIVER.SAMPLE"
    return table_name

def epics_table():
    table_name = "DCS_PRD.SAMPLE" 
    return table_name

def archiver_table(name=None, metric=None, avg=None):
    if name is None:
        raise TypeError("'name should not be None")
    if metric is None:
        raise TypeError("'metric should not be None")
    if avg is None:
        raise TypeError("'avg should not be None")
    return "RUNCON_PRD.%s_%s_%s_monitor" % (name, metric, avg)

POSTGRES_INSTANCES = {
 "epics": {
    "epics_secret_key": "icarus_epics_key",
    "name": "icarus_online_prd",
    "port": 5455,
    "host": "ifdb09.fnal.gov",

    "time_name": "SMPL_TIME",
    "value_names": ("NUM_VAL", "FLOAT_VAL"),
    "table_func": epics_table 
  },

  "sbn_epics": {
    "epics_secret_key": "sbn_epics_key",
    "name": "sbnteststand",
    "port": 5488,
    "host": "cdpgsdev",

    "time_name": "SMPL_TIME",
    "value_names": ("FLOAT_VAL",),
    "table_func": sbn_epics_table
  },

  "metric_archiving": {
    "epics_secret_key": "./metric_archiver_icarus.dat",
    "name": "icarus_online_prd",
    "port": 5455,
    "host": "ifdb09.fnal.gov",
    #"port": 5434,
    #"host": "icarus-db01.fnal.gov",

    "time_name": "SMPL_TIME",
    "value_names": ("SMPL_VALUE",),
    "table_func": archiver_table 
  },

  "sbnd_epics": {
    "epics_secret_key": "sbnd_secret_key.conf",
    "name": "sbnd_online_prd",
    "port": 5456,
    "host": "ifdb09",
    "time_name": "SMPL_TIME",
    "value_names": ("FLOAT_VAL",),
    "table_func": epics_table
  }

}

EPICS_INSTANCES = ["epics"]

HW_DATABASE = ""

CACHE_TYPE = "simple" # Flask-Caching related configs
CACHE_THRESHOLD = 1000
CACHE_DEFAULT_TIMEOUT = 300
CACHE_DIR = "/tmp/"

